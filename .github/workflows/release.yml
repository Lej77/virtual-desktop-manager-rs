name: Release

on:
  push:
    tags: ['v*']

jobs:
  build:
    name: Build
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      #- name: Configure cache
      #  uses: Swatinem/rust-cache@v2

      - name: Build release binary
        run: cargo build --release

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: release_binary
          path: target/release/virtual-desktop-manager.exe

  release:
    name: Release
    runs-on: windows-latest
    needs: build
    permissions:
      contents: write
    steps:
      - name: Download binary from previous job
        uses: actions/download-artifact@v4
        with:
          name: release_binary

      # Create the release:  https://github.com/actions/create-release
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{github.ref}}
          release_name: virtual-desktop-manager ${{ github.ref }}
          draft: false
          prerelease: false

      # Upload release asset:   https://github.com/actions/upload-release-asset
      - name: Upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}  # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: virtual-desktop-manager.exe
          asset_name: virtual-desktop-manager.exe
          # https://stackoverflow.com/questions/41459168/which-mime-type-is-correct-for-the-exe-file
          asset_content_type: application/vnd.microsoft.portable-executable
          # asset_content_type: application/zip